#0Y_ #0Y |CHARSET|::|UTF-8|
(|COMMON-LISP|::|SETQ| |COMMON-LISP|::|*PACKAGE*|
 (|SYSTEM|::|%FIND-PACKAGE| "HTML-EXTRACT"))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| |HTML-EXTRACT|::|SKIP-WHITESPACE|))
(|SYSTEM|::|C-DEFUN| '|HTML-EXTRACT|::|SKIP-WHITESPACE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#1=(|COMMON-LISP|::|&KEY| (|HTML-EXTRACT|::|SKIP| |COMMON-LISP|::|T|)
       (|HTML-EXTRACT|::|WRITE-THROUGH| |COMMON-LISP|::|NIL|)))
 '(#1#
   "Read characters from *STANDARD-INPUT* as long as they are\n
whitespace.  Returns the string which was read unless SKIP is true. On\n
EOF the string read so far is returned. Writes all characters read to\n
*STANDARD-OUTPUT* if WRITE-THROUGH is true."
   (|COMMON-LISP|::|DECLARE|
    (|SYSTEM|::|IN-DEFUN| |HTML-EXTRACT|::|SKIP-WHITESPACE|))
   (|COMMON-LISP|::|BLOCK| |HTML-EXTRACT|::|SKIP-WHITESPACE|
    (|HTML-EXTRACT|::|READ-WHILE| #'|HTML-EXTRACT|::|WHITESPACEP| :|SKIP|
     |HTML-EXTRACT|::|SKIP| :|WRITE-THROUGH|
     |HTML-EXTRACT|::|WRITE-THROUGH|))))
(|SYSTEM|::|C-DEFUN| '|HTML-EXTRACT|::|READ-DELIMITED-STRING|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&KEY| (|HTML-EXTRACT|::|SKIP| |COMMON-LISP|::|T|)
    (|HTML-EXTRACT|::|WRITE-THROUGH| |COMMON-LISP|::|NIL|))))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |HTML-EXTRACT|::|READ-NAME|))
(|SYSTEM|::|C-DEFUN| '|HTML-EXTRACT|::|READ-NAME|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#1=(|COMMON-LISP|::|&KEY| (|HTML-EXTRACT|::|SKIP| |COMMON-LISP|::|T|)
       (|HTML-EXTRACT|::|WRITE-THROUGH| |COMMON-LISP|::|NIL|)))
 '(#1#
   "Read characters from *STANDARD-INPUT* as long as they are name\n
constituents. Returns the string which was read unless SKIP is\n
true. On EOF the string read so far is returned. Writes all characters\n
read to *STANDARD-OUTPUT* if WRITE-THROUGH is true."
   (|COMMON-LISP|::|DECLARE|
    (|SYSTEM|::|IN-DEFUN| |HTML-EXTRACT|::|READ-NAME|))
   (|COMMON-LISP|::|BLOCK| |HTML-EXTRACT|::|READ-NAME|
    (|HTML-EXTRACT|::|READ-WHILE| #'|HTML-EXTRACT|::|NAME-CHAR-P| :|SKIP|
     |HTML-EXTRACT|::|SKIP| :|WRITE-THROUGH|
     |HTML-EXTRACT|::|WRITE-THROUGH|))))
(|SYSTEM|::|C-DEFUN| '|HTML-EXTRACT|::|READ-ATTRIBUTE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&KEY| (|HTML-EXTRACT|::|SKIP| |COMMON-LISP|::|T|)
    (|HTML-EXTRACT|::|WRITE-THROUGH| |COMMON-LISP|::|NIL|))))
(|SYSTEM|::|C-DEFUN| '|HTML-EXTRACT|::|SKIP-COMMENT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| |HTML-EXTRACT|::|SPACE-TAG-P|))
(|SYSTEM|::|C-DEFUN| '|HTML-EXTRACT|::|SPACE-TAG-P|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|HTML-EXTRACT|::|NAME|))
 '(#1#
   "Returns whether the HTML tag named by NAME introduces spaces around\n
itself."
   (|COMMON-LISP|::|DECLARE|
    (|SYSTEM|::|IN-DEFUN| |HTML-EXTRACT|::|SPACE-TAG-P|))
   (|COMMON-LISP|::|BLOCK| |HTML-EXTRACT|::|SPACE-TAG-P|
    (|COMMON-LISP|::|FIND| |HTML-EXTRACT|::|NAME|
     |HTML-EXTRACT|::|*SPACE-TAGS*| :|TEST| #'|COMMON-LISP|::|STRING-EQUAL|))))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|HTML-EXTRACT|::|PEEK-COND|)
(|SYSTEM|::|%PUTD| '|HTML-EXTRACT|::|PEEK-COND|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |HTML-EXTRACT|::|PEEK-COND|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((#1=#:|G3159| (|COMMON-LISP|::|CADR| . #2=(|SYSTEM|::|<MACRO-FORM>|)))
       (#3=#:|G3160|
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|NOT|
          (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| #1# 1. 1. |COMMON-LISP|::|T|))
         (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
          |SYSTEM|::|<MACRO-FORM>| :|DETAIL| #1#
          (|SYSTEM|::|TEXT| "~S: ~S does not match lambda list element ~:S")
          '|HTML-EXTRACT|::|PEEK-COND| #1#
          '#4=(|HTML-EXTRACT|::|VAR| |COMMON-LISP|::|&BODY|
               |HTML-EXTRACT|::|EOF-FORMS|))
         #1#))
       (|HTML-EXTRACT|::|VAR| (|COMMON-LISP|::|CAR| #3#))
       (|HTML-EXTRACT|::|EOF-FORMS| (|COMMON-LISP|::|CDR| #3#))
       (|HTML-EXTRACT|::|BODY| (|COMMON-LISP|::|CDDR| . #2#)))
      (|COMMON-LISP|::|BLOCK| |HTML-EXTRACT|::|PEEK-COND|
       `(|COMMON-LISP|::|LET| (,|HTML-EXTRACT|::|VAR|)
         (|COMMON-LISP|::|HANDLER-CASE|
          (|COMMON-LISP|::|PROGN|
           (|COMMON-LISP|::|SETQ| ,|HTML-EXTRACT|::|VAR|
            (|COMMON-LISP|::|PEEK-CHAR| |COMMON-LISP|::|NIL|))
           (|COMMON-LISP|::|COND| ,@|HTML-EXTRACT|::|BODY|))
          (|COMMON-LISP|::|END-OF-FILE| |COMMON-LISP|::|NIL|
           ,@|HTML-EXTRACT|::|EOF-FORMS|
           (|COMMON-LISP|::|RETURN-FROM|
            |HTML-EXTRACT|::|HTML-EXTRACT|)))))))))
  '(#4# |COMMON-LISP|::|&BODY| |HTML-EXTRACT|::|BODY|)))
