#0Y_ #0Y |CHARSET|::|UTF-8|
(|COMMON-LISP|::|SETQ| |COMMON-LISP|::|*PACKAGE*|
 (|SYSTEM|::|%FIND-PACKAGE| "HTML-EXTRACT"))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| |HTML-EXTRACT|::|PEEK-CHAR*|))
(|SYSTEM|::|C-DEFUN| '|HTML-EXTRACT|::|PEEK-CHAR*|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '|COMMON-LISP|::|NIL|)
 '(|COMMON-LISP|::|NIL|
   "PEEK-CHAR with input stream bound to *STANDARD-INPUT* and returning\n
NIL on EOF."
   (|COMMON-LISP|::|DECLARE|
    (|SYSTEM|::|IN-DEFUN| |HTML-EXTRACT|::|PEEK-CHAR*|))
   (|COMMON-LISP|::|BLOCK| |HTML-EXTRACT|::|PEEK-CHAR*|
    (|COMMON-LISP|::|PEEK-CHAR| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
     |COMMON-LISP|::|NIL|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| |HTML-EXTRACT|::|WHITESPACEP|))
(|SYSTEM|::|C-DEFUN| '|HTML-EXTRACT|::|WHITESPACEP|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|HTML-EXTRACT|::|C|))
 '(#1# "Checks whether C is a whitespace character."
   (|COMMON-LISP|::|DECLARE|
    (|SYSTEM|::|IN-DEFUN| |HTML-EXTRACT|::|WHITESPACEP|))
   (|COMMON-LISP|::|BLOCK| |HTML-EXTRACT|::|WHITESPACEP|
    (|COMMON-LISP|::|FIND| |HTML-EXTRACT|::|C|
     '(#\Space #\Tab #\Newline #\Newline #\Return #\Page)))))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |HTML-EXTRACT|::|LETTERP|))
(|SYSTEM|::|C-DEFUN| '|HTML-EXTRACT|::|LETTERP|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|HTML-EXTRACT|::|C|))
 '(#1#
   "Checks whether C is a character between A and Z\n
(case-insensitive)."
   (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |HTML-EXTRACT|::|LETTERP|))
   (|COMMON-LISP|::|BLOCK| |HTML-EXTRACT|::|LETTERP|
    (|COMMON-LISP|::|AND| (|COMMON-LISP|::|CHARACTERP| |HTML-EXTRACT|::|C|)
     (|COMMON-LISP|::|OR| (|COMMON-LISP|::|CHAR<=| #\a |HTML-EXTRACT|::|C| #\z)
      (|COMMON-LISP|::|CHAR<=| #\A |HTML-EXTRACT|::|C| #\Z))))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| |HTML-EXTRACT|::|NAME-CHAR-P|))
(|SYSTEM|::|C-DEFUN| '|HTML-EXTRACT|::|NAME-CHAR-P|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|HTML-EXTRACT|::|C|))
 '(#1#
   "Checks whether C is a name constituent character in the sense of\n
HTML."
   (|COMMON-LISP|::|DECLARE|
    (|SYSTEM|::|IN-DEFUN| |HTML-EXTRACT|::|NAME-CHAR-P|))
   (|COMMON-LISP|::|BLOCK| |HTML-EXTRACT|::|NAME-CHAR-P|
    (|COMMON-LISP|::|AND| (|COMMON-LISP|::|CHARACTERP| |HTML-EXTRACT|::|C|)
     (|COMMON-LISP|::|OR| (|HTML-EXTRACT|::|LETTERP| |HTML-EXTRACT|::|C|)
      (|COMMON-LISP|::|DIGIT-CHAR-P| |HTML-EXTRACT|::|C|)
      (|COMMON-LISP|::|CHAR=| |HTML-EXTRACT|::|C| #\-)
      (|COMMON-LISP|::|CHAR=| |HTML-EXTRACT|::|C| #\.))))))
(|SYSTEM|::|C-DEFUN| '|HTML-EXTRACT|::|READ-WHILE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|HTML-EXTRACT|::|PREDICATE| |COMMON-LISP|::|&KEY|
    (|HTML-EXTRACT|::|SKIP| |COMMON-LISP|::|T|)
    (|HTML-EXTRACT|::|WRITE-THROUGH| |COMMON-LISP|::|NIL|))))
(|SYSTEM|::|C-DEFUN| '|HTML-EXTRACT|::|READ-UNTIL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|STRING| |COMMON-LISP|::|&KEY|
    (|HTML-EXTRACT|::|SKIP| |COMMON-LISP|::|T|)
    (|HTML-EXTRACT|::|WRITE-THROUGH| |COMMON-LISP|::|NIL|))))
